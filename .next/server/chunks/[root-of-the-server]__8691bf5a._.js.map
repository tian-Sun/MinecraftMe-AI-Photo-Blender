{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/xyw/Tian/Real_PM/MinecraftMe-AI-Photo-Blender/src/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js';\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// 检查 Supabase 是否配置\nexport const isSupabaseConfigured = supabaseUrl && supabaseAnonKey;\n\nexport const supabase = isSupabaseConfigured \n  ? createClient(supabaseUrl!, supabaseAnonKey!)\n  : null;\n\n// 内存存储回退（当 Supabase 未配置时使用）\nconst memoryStorage: Record<string, { count: number; date: string }> = {};\n\n// 数据库表接口\nexport interface UserUsage {\n  id?: number;\n  user_email: string;\n  usage_count: number;\n  usage_date: string;\n  created_at?: string;\n  updated_at?: string;\n}\n\n// 获取或创建用户使用记录\nexport async function getUserUsage(userEmail: string, date: string): Promise<UserUsage | null> {\n  if (!isSupabaseConfigured) {\n    // 使用内存存储\n    const key = `${userEmail}_${date}`;\n    if (!memoryStorage[key] || memoryStorage[key].date !== date) {\n      memoryStorage[key] = { count: 0, date };\n    }\n    return {\n      user_email: userEmail,\n      usage_count: memoryStorage[key].count,\n      usage_date: date,\n    };\n  }\n\n  const { data, error } = await supabase!\n    .from('user_usage')\n    .select('*')\n    .eq('user_email', userEmail)\n    .eq('usage_date', date)\n    .single();\n\n  if (error && error.code !== 'PGRST116') { // PGRST116 = no rows found\n    console.error('Error fetching user usage:', error);\n    return null;\n  }\n\n  return data;\n}\n\n// 创建用户使用记录\nexport async function createUserUsage(userEmail: string, date: string): Promise<UserUsage | null> {\n  if (!isSupabaseConfigured) {\n    // 使用内存存储\n    const key = `${userEmail}_${date}`;\n    memoryStorage[key] = { count: 0, date };\n    return {\n      user_email: userEmail,\n      usage_count: 0,\n      usage_date: date,\n    };\n  }\n\n  const { data, error } = await supabase!\n    .from('user_usage')\n    .insert([\n      {\n        user_email: userEmail,\n        usage_count: 0,\n        usage_date: date,\n      }\n    ])\n    .select()\n    .single();\n\n  if (error) {\n    console.error('Error creating user usage:', error);\n    return null;\n  }\n\n  return data;\n}\n\n// 更新用户使用次数\nexport async function updateUserUsage(userEmail: string, date: string, newCount: number): Promise<boolean> {\n  if (!isSupabaseConfigured) {\n    // 使用内存存储\n    const key = `${userEmail}_${date}`;\n    if (memoryStorage[key]) {\n      memoryStorage[key].count = newCount;\n    }\n    return true;\n  }\n\n  const { error } = await supabase!\n    .from('user_usage')\n    .update({ usage_count: newCount, updated_at: new Date().toISOString() })\n    .eq('user_email', userEmail)\n    .eq('usage_date', date);\n\n  if (error) {\n    console.error('Error updating user usage:', error);\n    return false;\n  }\n\n  return true;\n} "],"names":[],"mappings":";;;;;;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB;AACxD,MAAM,kBAAkB,QAAQ,GAAG,CAAC,6BAA6B;AAG1D,MAAM,uBAAuB,eAAe;AAE5C,MAAM,WAAW,uBACpB,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAc,mBAC3B;AAEJ,4BAA4B;AAC5B,MAAM,gBAAiE,CAAC;AAajE,eAAe,aAAa,SAAiB,EAAE,IAAY;IAChE,IAAI,CAAC,sBAAsB;QACzB,SAAS;QACT,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,MAAM;QAClC,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM;YAC3D,aAAa,CAAC,IAAI,GAAG;gBAAE,OAAO;gBAAG;YAAK;QACxC;QACA,OAAO;YACL,YAAY;YACZ,aAAa,aAAa,CAAC,IAAI,CAAC,KAAK;YACrC,YAAY;QACd;IACF;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,cACL,MAAM,CAAC,KACP,EAAE,CAAC,cAAc,WACjB,EAAE,CAAC,cAAc,MACjB,MAAM;IAET,IAAI,SAAS,MAAM,IAAI,KAAK,YAAY;QACtC,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;IAEA,OAAO;AACT;AAGO,eAAe,gBAAgB,SAAiB,EAAE,IAAY;IACnE,IAAI,CAAC,sBAAsB;QACzB,SAAS;QACT,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,MAAM;QAClC,aAAa,CAAC,IAAI,GAAG;YAAE,OAAO;YAAG;QAAK;QACtC,OAAO;YACL,YAAY;YACZ,aAAa;YACb,YAAY;QACd;IACF;IAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,cACL,MAAM,CAAC;QACN;YACE,YAAY;YACZ,aAAa;YACb,YAAY;QACd;KACD,EACA,MAAM,GACN,MAAM;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;IAEA,OAAO;AACT;AAGO,eAAe,gBAAgB,SAAiB,EAAE,IAAY,EAAE,QAAgB;IACrF,IAAI,CAAC,sBAAsB;QACzB,SAAS;QACT,MAAM,MAAM,GAAG,UAAU,CAAC,EAAE,MAAM;QAClC,IAAI,aAAa,CAAC,IAAI,EAAE;YACtB,aAAa,CAAC,IAAI,CAAC,KAAK,GAAG;QAC7B;QACA,OAAO;IACT;IAEA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SACrB,IAAI,CAAC,cACL,MAAM,CAAC;QAAE,aAAa;QAAU,YAAY,IAAI,OAAO,WAAW;IAAG,GACrE,EAAE,CAAC,cAAc,WACjB,EAAE,CAAC,cAAc;IAEpB,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;IAEA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["file:///Users/xyw/Tian/Real_PM/MinecraftMe-AI-Photo-Blender/src/app/api/remaining/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth/next';\nimport { getUserUsage, createUserUsage, updateUserUsage } from '@/lib/supabase';\n\nconst DAILY_USAGE_LIMIT = 1;\n\nfunction getTodayKey(): string {\n  return new Date().toISOString().split('T')[0];\n}\n\nfunction getTimeLeft() {\n  const now = new Date();\n  const tomorrow = new Date(now);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  tomorrow.setHours(0, 0, 0, 0);\n  const diff = tomorrow.getTime() - now.getTime();\n  const hours = Math.floor(diff / (1000 * 60 * 60));\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  return { hours, minutes };\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await getServerSession();\n    \n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const userEmail = session.user.email;\n    const todayKey = getTodayKey();\n    \n    // 从数据库获取用户使用记录\n    let userUsage = await getUserUsage(userEmail, todayKey);\n    \n    // 如果没有记录，创建新记录\n    if (!userUsage) {\n      userUsage = await createUserUsage(userEmail, todayKey);\n      if (!userUsage) {\n        return NextResponse.json({ error: 'Failed to create user usage record' }, { status: 500 });\n      }\n    }\n\n    const remainingGenerations = Math.max(0, DAILY_USAGE_LIMIT - userUsage.usage_count);\n    const timeLeft = getTimeLeft();\n\n    return NextResponse.json({\n      remainingGenerations,\n      hours: timeLeft.hours,\n      minutes: timeLeft.minutes,\n      dailyLimit: DAILY_USAGE_LIMIT,\n    });\n  } catch (error) {\n    console.error('GET /api/remaining error:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await getServerSession();\n    \n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const userEmail = session.user.email;\n    const todayKey = getTodayKey();\n    \n    // 从数据库获取用户使用记录\n    let userUsage = await getUserUsage(userEmail, todayKey);\n    \n    // 如果没有记录，创建新记录\n    if (!userUsage) {\n      userUsage = await createUserUsage(userEmail, todayKey);\n      if (!userUsage) {\n        return NextResponse.json({ error: 'Failed to create user usage record' }, { status: 500 });\n      }\n    }\n\n    // 检查是否还有剩余次数\n    if (userUsage.usage_count >= DAILY_USAGE_LIMIT) {\n      return NextResponse.json({ error: 'Daily limit exceeded' }, { status: 429 });\n    }\n\n    // 增加使用次数\n    const newCount = userUsage.usage_count + 1;\n    const success = await updateUserUsage(userEmail, todayKey, newCount);\n    \n    if (!success) {\n      return NextResponse.json({ error: 'Failed to update usage count' }, { status: 500 });\n    }\n\n    return NextResponse.json({ \n      success: true, \n      remainingGenerations: Math.max(0, DAILY_USAGE_LIMIT - newCount)\n    });\n  } catch (error) {\n    console.error('POST /api/remaining error:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}
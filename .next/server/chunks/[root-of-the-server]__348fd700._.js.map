{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///Users/xyw/Tian/Real_PM/MinecraftMe-AI-Photo-Blender/src/app/api/remaining/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport { getServerSession } from 'next-auth/next';\n\nconst DAILY_USAGE_LIMIT = 1;\n\n// 简单的内存存储（生产环境应使用数据库）\nconst userUsage: Record<string, { count: number; date: string }> = {};\n\nfunction getTodayKey(): string {\n  return new Date().toISOString().split('T')[0];\n}\n\nfunction getTimeLeft() {\n  const now = new Date();\n  const tomorrow = new Date(now);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  tomorrow.setHours(0, 0, 0, 0);\n  const diff = tomorrow.getTime() - now.getTime();\n  const hours = Math.floor(diff / (1000 * 60 * 60));\n  const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n  return { hours, minutes };\n}\n\nexport async function GET(request: NextRequest) {\n  try {\n    const session = await getServerSession();\n    \n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const userEmail = session.user.email;\n    const todayKey = getTodayKey();\n    \n    // 获取或初始化用户使用记录\n    if (!userUsage[userEmail] || userUsage[userEmail].date !== todayKey) {\n      userUsage[userEmail] = { count: 0, date: todayKey };\n    }\n\n    const remainingGenerations = Math.max(0, DAILY_USAGE_LIMIT - userUsage[userEmail].count);\n    const timeLeft = getTimeLeft();\n\n    return NextResponse.json({\n      remainingGenerations,\n      hours: timeLeft.hours,\n      minutes: timeLeft.minutes,\n      dailyLimit: DAILY_USAGE_LIMIT,\n    });\n  } catch (error) {\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n\nexport async function POST(request: NextRequest) {\n  try {\n    const session = await getServerSession();\n    \n    if (!session?.user?.email) {\n      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 });\n    }\n\n    const userEmail = session.user.email;\n    const todayKey = getTodayKey();\n    \n    // 获取或初始化用户使用记录\n    if (!userUsage[userEmail] || userUsage[userEmail].date !== todayKey) {\n      userUsage[userEmail] = { count: 0, date: todayKey };\n    }\n\n    // 检查是否还有剩余次数\n    if (userUsage[userEmail].count >= DAILY_USAGE_LIMIT) {\n      return NextResponse.json({ error: 'Daily limit exceeded' }, { status: 429 });\n    }\n\n    // 增加使用次数\n    userUsage[userEmail].count++;\n\n    return NextResponse.json({ \n      success: true, \n      remainingGenerations: Math.max(0, DAILY_USAGE_LIMIT - userUsage[userEmail].count)\n    });\n  } catch (error) {\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA,MAAM,oBAAoB;AAE1B,sBAAsB;AACtB,MAAM,YAA6D,CAAC;AAEpE,SAAS;IACP,OAAO,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;AAC/C;AAEA,SAAS;IACP,MAAM,MAAM,IAAI;IAChB,MAAM,WAAW,IAAI,KAAK;IAC1B,SAAS,OAAO,CAAC,SAAS,OAAO,KAAK;IACtC,SAAS,QAAQ,CAAC,GAAG,GAAG,GAAG;IAC3B,MAAM,OAAO,SAAS,OAAO,KAAK,IAAI,OAAO;IAC7C,MAAM,QAAQ,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,EAAE;IAC/C,MAAM,UAAU,KAAK,KAAK,CAAC,AAAC,OAAO,CAAC,OAAO,KAAK,EAAE,IAAK,CAAC,OAAO,EAAE;IACjE,OAAO;QAAE;QAAO;IAAQ;AAC1B;AAEO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD;QAErC,IAAI,CAAC,SAAS,MAAM,OAAO;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,YAAY,QAAQ,IAAI,CAAC,KAAK;QACpC,MAAM,WAAW;QAEjB,eAAe;QACf,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,KAAK,UAAU;YACnE,SAAS,CAAC,UAAU,GAAG;gBAAE,OAAO;gBAAG,MAAM;YAAS;QACpD;QAEA,MAAM,uBAAuB,KAAK,GAAG,CAAC,GAAG,oBAAoB,SAAS,CAAC,UAAU,CAAC,KAAK;QACvF,MAAM,WAAW;QAEjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB;YACA,OAAO,SAAS,KAAK;YACrB,SAAS,SAAS,OAAO;YACzB,YAAY;QACd;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,UAAU,MAAM,CAAA,GAAA,+IAAA,CAAA,mBAAgB,AAAD;QAErC,IAAI,CAAC,SAAS,MAAM,OAAO;YACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACpE;QAEA,MAAM,YAAY,QAAQ,IAAI,CAAC,KAAK;QACpC,MAAM,WAAW;QAEjB,eAAe;QACf,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,CAAC,IAAI,KAAK,UAAU;YACnE,SAAS,CAAC,UAAU,GAAG;gBAAE,OAAO;gBAAG,MAAM;YAAS;QACpD;QAEA,aAAa;QACb,IAAI,SAAS,CAAC,UAAU,CAAC,KAAK,IAAI,mBAAmB;YACnD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAuB,GAAG;gBAAE,QAAQ;YAAI;QAC5E;QAEA,SAAS;QACT,SAAS,CAAC,UAAU,CAAC,KAAK;QAE1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,SAAS;YACT,sBAAsB,KAAK,GAAG,CAAC,GAAG,oBAAoB,SAAS,CAAC,UAAU,CAAC,KAAK;QAClF;IACF,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}
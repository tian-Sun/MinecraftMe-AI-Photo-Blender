{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/haotian/mini/%E3%80%80code/MinecraftMe-AI-Photo-Blender/src/app/api/remove-background/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport Replicate from \"replicate\";\n\nconst replicate = new Replicate({\n  auth: process.env.REPLICATE_API_TOKEN,\n});\n\nconst MODEL_VERSION = \"f74986db0355b58403ed20963af156525e2891ea3c2d499bfbfb2a28cd87c5d7\";\n\nfunction isReadableStream(obj: any): obj is ReadableStream {\n  return obj && typeof obj.getReader === \"function\";\n}\n\n// 正确处理图片流为 Buffer\nasync function streamToBuffer(stream: ReadableStream): Promise<Buffer> {\n  const reader = stream.getReader();\n  const chunks: Uint8Array[] = [];\n  while (true) {\n    const { done, value } = await reader.read();\n    if (done) break;\n    chunks.push(value);\n  }\n  return Buffer.concat(chunks);\n}\n\nexport async function POST(request: Request) {\n  console.log(\"🚀 开始处理背景移除请求\");\n  \n  try {\n    const formData = await request.formData();\n    const file = formData.get(\"image\") as File;\n\n    if (!file) {\n      console.log(\"❌ 未提供图片文件\");\n      return NextResponse.json(\n        { error: \"No image file provided\" },\n        { status: 400 }\n      );\n    }\n\n    console.log(\"📝 接收到图片文件:\", {\n      name: file.name,\n      type: file.type,\n      size: file.size\n    });\n\n    // 如果没有配置 API token，返回演示模式响应\n    if (!process.env.REPLICATE_API_TOKEN) {\n      console.log(\"⚠️ 未配置 API token，使用演示模式\");\n      return NextResponse.json({\n        success: true,\n        result: \"/demo/person.png\",\n        message: \"Running in demo mode - using sample image\",\n      });\n    }\n\n    // 将文件转换为 base64\n    const bytes = await file.arrayBuffer();\n    const buffer = Buffer.from(bytes);\n    const base64Image = buffer.toString(\"base64\");\n    const dataUrl = `data:${file.type};base64,${base64Image}`;\n    console.log(\"✅ 图片已转换为 base64\");\n\n    // 调用 Replicate API 移除背景\n    console.log(\"🔄 正在调用 Replicate API...\");\n    \n    try {\n      let output = await replicate.run(\n        \"cjwbw/rembg:f74986db0355b58403ed20963af156525e2891ea3c2d499bfbfb2a28cd87c5d7\",\n        {\n          input: {\n            image: dataUrl\n          }\n        }\n      ) as unknown;\n\n      // 兼容 ReadableStream 返回，转 Buffer 再转 base64\n      if (isReadableStream(output)) {\n        const buffer = await streamToBuffer(output);\n        output = buffer.toString(\"base64\");\n        console.log(\"【LOG】output 已从 ReadableStream 转为 base64，前30字符:\", (output as string).slice(0, 30));\n      }\n      // 只对 base64 字符串加前缀\n      if (typeof output === \"string\" && !(output as string).startsWith(\"data:image/png;base64,\")) {\n        output = `data:image/png;base64,${output}`;\n        console.log(\"【LOG】output 已加前缀，前30字符:\", (output as string).slice(0, 30));\n      }\n      console.log(\"【LOG】最终返回 output 前100字符:\", typeof output === \"string\" ? (output as string).slice(0, 100) : output);\n\n      // 如果输出是 URL，获取图片内容并转换为 base64\n      if (typeof output === \"string\" && output.startsWith(\"http\")) {\n        console.log(\"📥 正在获取远程图片数据...\");\n        const imageResponse = await fetch(output);\n        const arrayBuffer = await imageResponse.arrayBuffer();\n        const base64 = Buffer.from(arrayBuffer).toString(\"base64\");\n        const resultDataUrl = `data:image/png;base64,${base64}`;\n        \n        return NextResponse.json({ \n          success: true, \n          result: resultDataUrl\n        });\n      }\n\n      // 如果输出已经是 base64 或其他格式，直接返回\n      return NextResponse.json({ \n        success: true, \n        result: output \n      });\n    } catch (apiError) {\n      console.error(\"❌ Replicate API 错误:\", apiError);\n      throw new Error(`Replicate API 错误: ${apiError instanceof Error ? apiError.message : String(apiError)}`);\n    }\n\n  } catch (error) {\n    console.error(\"❌ 背景移除错误:\", error);\n    return NextResponse.json(\n      { error: \"Background removal failed\", details: error instanceof Error ? error.message : String(error) },\n      { status: 500 }\n    );\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,YAAY,IAAI,oIAAA,CAAA,UAAS,CAAC;IAC9B,MAAM,QAAQ,GAAG,CAAC,mBAAmB;AACvC;AAEA,MAAM,gBAAgB;AAEtB,SAAS,iBAAiB,GAAQ;IAChC,OAAO,OAAO,OAAO,IAAI,SAAS,KAAK;AACzC;AAEA,kBAAkB;AAClB,eAAe,eAAe,MAAsB;IAClD,MAAM,SAAS,OAAO,SAAS;IAC/B,MAAM,SAAuB,EAAE;IAC/B,MAAO,KAAM;QACX,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,IAAI;QACzC,IAAI,MAAM;QACV,OAAO,IAAI,CAAC;IACd;IACA,OAAO,OAAO,MAAM,CAAC;AACvB;AAEO,eAAe,KAAK,OAAgB;IACzC,QAAQ,GAAG,CAAC;IAEZ,IAAI;QACF,MAAM,WAAW,MAAM,QAAQ,QAAQ;QACvC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM;YACT,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAyB,GAClC;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC,eAAe;YACzB,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;YACf,MAAM,KAAK,IAAI;QACjB;QAEA,4BAA4B;QAC5B,IAAI,CAAC,QAAQ,GAAG,CAAC,mBAAmB,EAAE;YACpC,QAAQ,GAAG,CAAC;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,QAAQ;gBACR,SAAS;YACX;QACF;QAEA,gBAAgB;QAChB,MAAM,QAAQ,MAAM,KAAK,WAAW;QACpC,MAAM,SAAS,OAAO,IAAI,CAAC;QAC3B,MAAM,cAAc,OAAO,QAAQ,CAAC;QACpC,MAAM,UAAU,CAAC,KAAK,EAAE,KAAK,IAAI,CAAC,QAAQ,EAAE,aAAa;QACzD,QAAQ,GAAG,CAAC;QAEZ,wBAAwB;QACxB,QAAQ,GAAG,CAAC;QAEZ,IAAI;YACF,IAAI,SAAS,MAAM,UAAU,GAAG,CAC9B,gFACA;gBACE,OAAO;oBACL,OAAO;gBACT;YACF;YAGF,0CAA0C;YAC1C,IAAI,iBAAiB,SAAS;gBAC5B,MAAM,SAAS,MAAM,eAAe;gBACpC,SAAS,OAAO,QAAQ,CAAC;gBACzB,QAAQ,GAAG,CAAC,kDAAkD,AAAC,OAAkB,KAAK,CAAC,GAAG;YAC5F;YACA,mBAAmB;YACnB,IAAI,OAAO,WAAW,YAAY,CAAC,AAAC,OAAkB,UAAU,CAAC,2BAA2B;gBAC1F,SAAS,CAAC,sBAAsB,EAAE,QAAQ;gBAC1C,QAAQ,GAAG,CAAC,2BAA2B,AAAC,OAAkB,KAAK,CAAC,GAAG;YACrE;YACA,QAAQ,GAAG,CAAC,4BAA4B,OAAO,WAAW,WAAW,AAAC,OAAkB,KAAK,CAAC,GAAG,OAAO;YAExG,8BAA8B;YAC9B,IAAI,OAAO,WAAW,YAAY,OAAO,UAAU,CAAC,SAAS;gBAC3D,QAAQ,GAAG,CAAC;gBACZ,MAAM,gBAAgB,MAAM,MAAM;gBAClC,MAAM,cAAc,MAAM,cAAc,WAAW;gBACnD,MAAM,SAAS,OAAO,IAAI,CAAC,aAAa,QAAQ,CAAC;gBACjD,MAAM,gBAAgB,CAAC,sBAAsB,EAAE,QAAQ;gBAEvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;oBACvB,SAAS;oBACT,QAAQ;gBACV;YACF;YAEA,4BAA4B;YAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,QAAQ;YACV;QACF,EAAE,OAAO,UAAU;YACjB,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM,IAAI,MAAM,CAAC,kBAAkB,EAAE,oBAAoB,QAAQ,SAAS,OAAO,GAAG,OAAO,WAAW;QACxG;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,aAAa;QAC3B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;YAA6B,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;QAAO,GACtG;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}